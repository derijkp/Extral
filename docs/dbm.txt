Dbm support
===========

dbm support that can have different backends: availble backend systems are
	fdbm: file system based; slow but easy, relatively safe and very portable
	gdbm: using the gdbm routines; as a loadable module (gdbm.so)
	bsddbm: using the bsd db routines; as a loadable module (bsddbm.so)
			 this seems to be the faster and most reliable than gdbm
Several of the commands can have options depending on the type of dbm.
New backends can be added (in C) using the ExtraL_DbmCreateType function.
The database code can also be used from C using the ExtraL_DbmOpen function.

dbm command
-----------
	dbm types
		list the available type of database systems; fdbm is provided,
		gdbm and bsddbm are dynamically loadable
	dbm create type database ?options?
		create a database of the given type (fdbm, gdbm, bsddbm) in 
		the "file" database. The database is not opened by this command.
	dbm open type dbcmd database ?options?
		open a database for reading (read = default) or reading and 
		writing (write).
		type: the type of the database (fdbm, gdbm, bsddbm).
		dbcmd: the command by which the opened database can be queried
		database: place of the database in the filing system

database commands
-----------------
The dbmcmd created by the "dbm create" above will have the following options:
	dbmcmd set key value
		set key in the database to value.
	dbmcmd get key
		get the value associated with key from the database.
	dbmcmd unset key
		remove a key from the database.
	dbmcmd sync
		sync the database (for those types that need it).
	dbmcmd reorganize
		reorganize the database (for those types that need it).

