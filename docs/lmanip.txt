lmanip subindex ?list? ?pos?
	returns a list of the 'pos' element in each of the elements of the given list
	eg.
	% lmanip subindex {{a 1} {b 2} {c 3}} 1
	1 2 3

lmanip mangle ?list1? ?list2?
	mangles two lists into one
	eg.
	% lmanip mangle {a b c} {1 2 3}
	{a 1} {b 2} {c 3}

lmanip extract ?list? ?expression?
	tries to match each element in a list; if the element matches, it extracts the 
	parenthesised part. It returns a list of all extracted parts. If there was no match,
	an empty element is put in the list.
	eg. 
	% lmanip extract {Results {A: 50%} {B: 25%} {C: 25%}} { ([0-9+]+)\%}
		{} 50 25 25

lmanip remdup ?list?
	removes duplicates from list
	eg.
	% lmanip remdup {a b c a b d}
	a b c d

lmanip split ?list? -before/-after/-outside ?positions?
	splits a list at positions into sublists
	eg.
	% lmanip split {a b c d e} -before {1 3}
	a {b c} {d e}

lmanip join ?list? ?join string? ?position list?
	joins list elements at positions given in the ?position list?. When you
	specify all, all elements will be joined.
	eg.
	% lmanip join {a b c {a d} e} { } {0 2}
		{a b} {c a d} e
	% lmanip join {a b c {a d} e} {} {0 2}
		ab {ca d} e
	% lmanip join {a b c {a d} e} {} all
	abca de

lmanip lengths ?list?
	returns a list with the lengths of the elements
	eg.
	% lmanip lengths {abc abcdef}
	3 6

lmanip fill ?size? ?start? ??incr??
	fills a list of ?size? elements with ?start?; if ?incr? is given and ?size? is an integer, each element in the list will be the former incremented with ?incr?
	eg.
	% lmanip fill 4 "Hello world"
	{Hello world} {Hello world} {Hello world} {Hello world}
	% lmanip fill 5 2 2
	2 4 6 8 10
	% lmanip fill 5 10 -2
	10 8 6 4 2

